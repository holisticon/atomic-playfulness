.hap-button,
.hap-toggle-button,
.hap-button--sm,
.hap-toggle-button--sm {
  font-family: var(--hap-typography-font-family-body);
  font-size: var(--hap-button-font-size);
  font-weight: var(--hap-typography-font-weight-medium);
  letter-spacing: var(--hap-typography-letter-spacing-lg);
  line-height: var(--hap-button-line-height);
  border: none;
  border-radius: var(--hap-radius-full);
  padding: var(--hap-button-padding);
  cursor: pointer;
  width: max-content;
  display: flex;
  gap: var(--hap-button-gap);
  align-items: center;

  svg {
    height: var(--hap-button-icon-size);
    width: var(--hap-button-icon-size);
  }

  &:disabled {
    opacity: var(--hap-opacity-disabled);
    cursor: not-allowed;
  }

  &:focus-visible {
    outline: none;
  }

  &.hap-button--primary,
  &.hap-toggle-button:is([aria-pressed="true"], [aria-checked="true"]),
  &.hap-toggle-button--sm:is([aria-pressed="true"], [aria-checked="true"]) {
    color: light-dark(
      var(--hap-color-text-brand-on-dark),
      var(--hap-color-text-brand-on-light)
    );
    background-color: light-dark(
      var(--hap-color-fill-brand-on-light-default),
      var(--hap-color-fill-brand-on-dark-default)
    );

    &:hover {
      color: light-dark(
        var(--hap-color-text-brand-on-dark),
        var(--hap-color-text-brand-on-light)
      );
      background-color: light-dark(
        var(--hap-color-fill-brand-on-light-hovered),
        var(--hap-color-fill-brand-on-dark-hovered)
      );
    }

    &:focus-visible {
      color: light-dark(
        var(--hap-color-text-brand-on-dark),
        var(--hap-color-text-brand-on-light)
      );
      background-color: light-dark(
        var(--hap-color-fill-brand-on-light-default),
        var(--hap-color-fill-brand-on-dark-default)
      );
      box-shadow: inset 0 0 0 var(--hap-border-width-md)
        light-dark(
          var(--hap-color-border-focused-default),
          var(--hap-color-border-focused-default)
        );
    }

    &:active {
      color: light-dark(
        var(--hap-color-text-brand-on-dark),
        var(--hap-color-text-brand-on-light)
      );
      background-color: light-dark(
        var(--hap-color-fill-brand-on-light-pressed),
        var(--hap-color-fill-brand-on-dark-pressed)
      );
    }

    &:disabled {
      color: light-dark(
        var(--hap-color-text-brand-on-dark),
        var(--hap-color-text-brand-on-light)
      );
      background-color: light-dark(
        var(--hap-color-fill-brand-on-light-default),
        var(--hap-color-fill-brand-on-dark-default)
      );
    }
  }

  &.hap-button--secondary,
  &.hap-toggle-button:is([aria-pressed="false"], [aria-checked="false"]),
  &.hap-toggle-button--sm:is([aria-pressed="false"], [aria-checked="false"]) {
    color: light-dark(
      var(--hap-color-text-brand-on-light),
      var(--hap-color-text-brand-on-dark-only)
    );
    background-color: light-dark(
      transparent,
      var(--hap-color-fill-interaction-on-dark-default)
    );
    box-shadow: inset 0 0 0 var(--hap-border-width-sm)
      light-dark(
        var(--hap-color-border-brand-on-light-default),
        var(--hap-color-border-brand-on-dark-default)
      );

    &:hover {
      color: light-dark(
        var(--hap-color-text-brand-on-light),
        var(--hap-color-text-brand-on-dark-only)
      );
      background-color: light-dark(
        var(--hap-color-fill-interaction-on-light-hovered),
        var(--hap-color-fill-interaction-on-dark-hovered)
      );
      box-shadow: inset 0 0 0 var(--hap-border-width-sm)
        light-dark(
          var(--hap-color-border-brand-on-light-default),
          var(--hap-color-border-brand-on-dark-default)
        );
    }

    &:focus-visible {
      color: light-dark(
        var(--hap-color-text-brand-on-light),
        var(--hap-color-text-brand-on-dark)
      );
      background-color: light-dark(
        var(--hap-color-fill-interaction-on-light-default),
        var(--hap-color-fill-interaction-on-dark-default)
      );
      box-shadow: inset 0 0 0 var(--hap-border-width-md)
        light-dark(
          var(--hap-color-border-focused-default),
          var(--hap-color-border-focused-default)
        );
    }

    &:active {
      color: light-dark(
        var(--hap-color-text-brand-on-light),
        var(--hap-color-text-brand-on-dark-only)
      );
      background-color: light-dark(
        var(--hap-color-fill-interaction-on-light-pressed),
        var(--hap-color-fill-interaction-on-dark-pressed)
      );
      box-shadow: inset 0 0 0 var(--hap-border-width-sm)
        light-dark(
          var(--hap-color-border-brand-on-light-default),
          var(--hap-color-border-brand-on-dark-default)
        );
    }

    &:disabled {
      color: light-dark(
        var(--hap-color-text-brand-on-light),
        var(--hap-color-text-brand-on-dark-only)
      );
      background-color: light-dark(
        var(--hap-color-fill-interaction-on-light-default),
        var(--hap-color-fill-interaction-on-dark-default)
      );
      box-shadow: inset 0 0 0 var(--hap-border-width-sm)
        light-dark(
          var(--hap-color-border-brand-on-light-default),
          var(--hap-color-border-brand-on-dark-default)
        );
    }
  }

  /* same as secondary but without borders in some states */
  &.hap-button--tertiary,
  &.hap-toggle-button--sublte:is(
      [aria-pressed="false"],
      [aria-checked="false"]
    ) {
    color: light-dark(
      var(--hap-color-text-brand-on-light),
      var(--hap-color-text-brand-on-dark-only)
    );
    background-color: light-dark(
      transparent,
      var(--hap-color-fill-interaction-on-dark-default)
    );

    &:hover {
      color: light-dark(
        var(--hap-color-text-brand-on-light),
        var(--hap-color-text-brand-on-dark-only)
      );
      background-color: light-dark(
        var(--hap-color-fill-interaction-on-light-hovered),
        var(--hap-color-fill-interaction-on-dark-hovered)
      );
    }

    &:focus-visible {
      color: light-dark(
        var(--hap-color-text-brand-on-light),
        var(--hap-color-text-brand-on-dark)
      );
      background-color: light-dark(
        var(--hap-color-fill-interaction-on-light-default),
        var(--hap-color-fill-interaction-on-dark-default)
      );
      box-shadow: inset 0 0 0 var(--hap-border-width-md)
        light-dark(
          var(--hap-color-border-focused-default),
          var(--hap-color-border-focused-default)
        );
    }

    &:active {
      color: light-dark(
        var(--hap-color-text-brand-on-light),
        var(--hap-color-text-brand-on-dark-only)
      );
      background-color: light-dark(
        var(--hap-color-fill-interaction-on-light-pressed),
        var(--hap-color-fill-interaction-on-dark-pressed)
      );
    }

    &:disabled {
      color: light-dark(
        var(--hap-color-text-brand-on-light),
        var(--hap-color-text-brand-on-dark-only)
      );
      background-color: light-dark(
        var(--hap-color-fill-interaction-on-light-default),
        var(--hap-color-fill-interaction-on-dark-default)
      );
    }
  }

  &.hap-button--destructive {
    color: light-dark(
      var(--hap-color-feedback-critical-light),
      var(--hap-color-feedback-critical-light)
    );
    background-color: light-dark(
      var(--hap-color-fill-destructive-on-light-default),
      var(--hap-color-fill-destructive-on-dark-default)
    );

    &:hover {
      color: light-dark(
        var(--hap-color-feedback-critical-light),
        var(--hap-color-feedback-critical-light)
      );
      background-color: light-dark(
        var(--hap-color-fill-destructive-on-light-hovered),
        var(--hap-color-fill-destructive-on-dark-hovered)
      );
    }

    &:focus-visible {
      color: light-dark(
        var(--hap-color-feedback-critical-light),
        var(--hap-color-feedback-critical-light)
      );
      background-color: light-dark(
        var(--hap-color-fill-destructive-on-light-hovered),
        var(--hap-color-fill-destructive-on-dark-hovered)
      );
      box-shadow: inset 0 0 0 var(--hap-border-width-md)
        light-dark(
          var(--hap-color-border-focused-default),
          var(--hap-color-border-focused-default)
        );
    }

    &:active {
      color: light-dark(
        var(--hap-color-feedback-critical-light),
        var(--hap-color-feedback-critical-light)
      );
      background-color: light-dark(
        var(--hap-color-fill-destructive-on-light-pressed),
        var(--hap-color-fill-destructive-on-dark-pressed)
      );
    }

    &:disabled {
      color: light-dark(
        var(--hap-color-feedback-critical-light),
        var(--hap-color-feedback-critical-light)
      );
      background-color: light-dark(
        var(--hap-color-fill-destructive-on-light-default),
        var(--hap-color-fill-destructive-on-dark-default)
      );
    }
  }
}

.hap-button,
.hap-toggle-button {
  --hap-button-padding: var(--hap-spacing-sm) var(--hap-spacing-md);
  --hap-button-font-size: var(--hap-typography-font-size-bodytext-s);
  --hap-button-line-height: var(
    --hap-typography-line-height-bodytext-standard-singleline
  );
  --hap-button-gap: var(--hap-spacing-sm);
  --hap-button-icon-size: var(
    --hap-typography-line-height-bodytext-standard-singleline
  );
}

.hap-button--sm,
.hap-toggle-button--sm {
  --hap-button-padding: var(--hap-spacing-xs) var(--hap-spacing-sm);
  --hap-button-font-size: var(--hap-typography-font-size-bodytext-s);
  --hap-button-line-height: var(
    --hap-typography-line-height-bodytext-s-singleline
  );
  --hap-button-gap: var(--hap-spacing-xs);
  --hap-button-icon-size: var(
    --hap-typography-line-height-bodytext-s-singleline
  );
}
