.hap-radio-group {
  --hap-radio-group-spacing: var(--hap-spacing-xs);
  --hap-radio-group-color-text: light-dark(
    var(--hap-color-text-secondary-on-light),
    var(--hap-color-text-secondary-on-dark)
  );
  --hap-radio-color-text: light-dark(
    var(--hap-color-text-primary-on-light),
    var(--hap-color-text-primary-on-dark)
  );
  --hap-radio-color-border: light-dark(
    var(--hap-color-border-brand-on-light-default),
    var(--hap-color-border-brand-on-dark-default)
  );

  appearance: none;
  border: none;
  margin: unset;
  padding: unset;
  display: flex;
  flex-direction: column;
  gap: var(--hap-radio-group-spacing);

  &:disabled {
    pointer-events: none;
    cursor: default;
    opacity: var(--hap-opacity-disabled);
  }

  &:has(.hap-error) {
    --hap-radio-group-color-text: light-dark(
      var(--hap-color-feedback-critical-dark),
      var(--hap-color-feedback-critical-light)
    );
    --hap-radio-color-text: light-dark(
      var(--hap-color-feedback-critical-dark),
      var(--hap-color-feedback-critical-light)
    );
    --hap-radio-color-border: var(--hap-color-feedback-critical-dark);
  }
}

.hap-radio-group > legend {
  padding: unset;
  padding-block-end: var(--hap-radio-group-spacing);

  color: var(--hap-radio-group-color-text);
  font-family: var(--hap-typography-font-family-body);
  font-size: var(--hap-typography-font-size-bodytext-s);
  font-weight: var(--hap-typography-font-weight-medium);
  line-height: var(--hap-typography-line-height-bodytext-s-singleline);
  letter-spacing: var(--hap-typography-letter-spacing-lg);
}

.hap-radio {
  color: var(--hap-radio-color-text);
  font-family: var(--hap-typography-font-family-body);
  font-size: var(--hap-typography-font-size-bodytext-s);
  font-weight: var(--hap-typography-font-weight-medium);
  line-height: var(--hap-typography-line-height-bodytext-s-singleline);
  letter-spacing: var(--hap-typography-letter-spacing-lg);

  display: flex;
  gap: var(--hap-spacing-xs);
  align-items: center;
  cursor: pointer;
}

.hap-radio > input {
  box-sizing: border-box;
  appearance: none;
  margin: unset;
  display: grid;
  place-content: center;
  cursor: pointer;

  color: var(--hap-radio-color-border);
  border-radius: 100%;
  border: var(--hap-border-width-md) solid currentColor;
  /* has no custom property... */
  inline-size: calc(var(--hap-size-lg) - 2 * 3px);
  block-size: calc(var(--hap-size-lg) - 2 * 3px);
  margin: 3px;

  &:hover {
    background-color: var(--hap-color-fill-interaction-on-light-hovered);
  }

  &:focus-visible {
    z-index: 1;
    outline: var(--hap-border-width-md) solid
      var(--hap-color-border-focused-default);
    outline-offset: var(--hap-border-width-sm);
  }

  &:checked::before {
    display: block;
    content: "";
    border-radius: 100%;
    background-color: currentColor;
    inline-size: var(--hap-size-2xs);
    block-size: var(--hap-size-2xs);
  }
}

.hap-error {
  display: inline-flex;
  gap: var(--hap-spacing-xs);
  font-family: var(--hap-typography-font-family-body);
  font-size: var(--hap-typography-font-size-bodytext-xs);
  font-weight: var(--hap-typography-font-weight-regular);
  line-height: var(--hap-typography-line-height-bodytext-xs-multiline);
  letter-spacing: var(--hap-typography-letter-spacing-lg);
  color: light-dark(
    var(--hap-color-feedback-critical-dark),
    var(--hap-color-feedback-critical-light)
  );

  & > svg {
    height: var(--hap-typography-line-height-bodytext-s-singleline);
    width: var(--hap-typography-line-height-bodytext-s-singleline);
  }
}
